<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_pillar_boss_spawn</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

initialDepth = -sprite_get_height(sp_pillar_boss_idle) div 4;

image_speed = 1 / room_speed * 2;

isBusy = true;
canKnockback = false;

canAttack = true;
attackDelay = 4;

STATE = SPAWNING;

spawnY = y;
y = 0;

alarm[1] = room_speed * 8;


maxHP = 1000;
currHP = maxHP;


BOSS_STAGE = currHP div (maxHP div 8) - 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(solidBase){
    removeObjectFromGrid(global.pathingGrid);
    instance_destroy();    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>STATE = ATTACKING;

alarm[1] = room_speed * 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn mobs


// Spawn mushrooms
var spawner = instance_create(x, y + sprite_get_height(sp_pillar_boss_idle) div 4, obj_enemy_spawner);
spawner.objMobType = obj_mushroom;
numOfEnemies = 6;
spawner.randExtra = 6;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(STATE == SPAWNING){
    sprite_index = sp_pillar_boss_spawn;
    y+=8;
    if(y &gt;= spawnY){
        STATE = IDLE;
        solidBase = instance_create(x, y, obj_invisible_wall);
        addObjectToGrid(global.pathingGrid, solidBase);
        
        // Spawn mobs
        alarm[0] = 1;
        
    }
}else if(STATE == IDLE){
    sprite_index = sp_pillar_boss_idle;
    
    if(image_index &gt;= 1.75 &amp;&amp; image_index &lt;= 2.25){
        // Push away spawned mobs
        var attack = instance_create(x + sprite_get_width(sp_pillar_boss_idle) div 3, y + sprite_get_height(sp_pillar_boss_idle) div 6, obj_enemy_blob_attack);     
        attack.image_xscale = 2;
        attack.image_yscale = 2; 
        attack.knockback = 16;
        attack.damage = 1;
        attack.ignoreType = obj_pillar_boss;
        attackSpeed = room_speed / 32;
    }else if(image_index &gt;= 3.75 &amp;&amp; image_index &lt;= 4.25){
        // Push away spawned mobs
        var attack = instance_create(x - sprite_get_width(sp_pillar_boss_idle) div 3, y + sprite_get_height(sp_pillar_boss_idle) div 6, obj_enemy_blob_attack);    
        attack.image_xscale = 2;
        attack.image_yscale = 2;
        attack.knockback = 16;
        attack.damage = 1;
        attack.ignoreType = obj_pillar_boss;
        attackSpeed = room_speed / 32;
    }
    
}else if(STATE == ATTACKING){
    sprite_index = sp_pillar_boss_attack;
    if(image_index &gt;  image_number - 1){
        var player = instance_find(obj_player, 0);
        if(player != noone){
            var w = (sprite_get_width(sp_mushroom_bomb)+ (8 - BOSS_STAGE)*3) * 6;
            var h = (sprite_get_height(sp_mushroom_bomb)+ (8 - BOSS_STAGE)*3) * 6;
            for(var i = 0; i &lt; 9 + (8 - BOSS_STAGE)*3; i++){
                instance_create(player.x + random_range(-w,w), player.y + random_range(-h,h), obj_mushroom_bomb);
            }
        }
        STATE = IDLE;
    }    
}

if(currHP div (maxHP div 8) &lt; BOSS_STAGE){
    // Spawn mobs
    alarm[0] = 1;
    BOSS_STAGE = currHP div (maxHP div 8);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
